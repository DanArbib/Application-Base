services:

  # Postgres
  pg:
    hostname: pg
    image: postgres:16.3-alpine3.20
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=${PGDATA}
    networks:
      - db-net
    volumes:
      - postgress_db:/var/lib/postgresql/data/db-files/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U flask_app" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  # Api  
  api:
    hostname: api
    build:
      context: .
      dockerfile: ./api/Dockerfile.api
    volumes:
      - ./logs:/app/app/logs
    env_file:
      - ./.env
    depends_on:
      pg:
        condition: service_healthy
    networks:
      - app-net
      - db-net
      - monitor-net
    restart: always
    ports:
      - "5000:5000"

volumes:
  postgress_db:
  app-logs:
  loki_data:
  grafana_data:

networks:
  app-net:
  db-net:
  log-net:
  monitor-net:
  grafana-net:
  redis_net:
